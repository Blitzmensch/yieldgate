/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BeneficiaryPool,
  BeneficiaryPoolInterface,
} from "../BeneficiaryPool";

const _abi = [
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "supporter",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supporters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "supporter",
        type: "address",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061126d806100206000396000f3fe6080604052600436106100705760003560e01c8063647c75e21161004e578063647c75e2146100fb578063af38d75714610138578063f09a401614610163578063f2888dbb1461018c57610070565b80630b76619b1461007557806326476204146100a05780634e71d92d146100d0575b600080fd5b34801561008157600080fd5b5061008a6101c9565b6040516100979190610c54565b60405180910390f35b6100ba60048036038101906100b59190610cd2565b6101d3565b6040516100c79190610c54565b60405180910390f35b3480156100dc57600080fd5b506100e561046e565b6040516100f29190610c54565b60405180910390f35b34801561010757600080fd5b50610122600480360381019061011d9190610cd2565b61053e565b60405161012f9190610c54565b60405180910390f35b34801561014457600080fd5b5061014d610556565b60405161015a9190610c54565b60405180910390f35b34801561016f57600080fd5b5061018a60048036038101906101859190610cff565b610677565b005b34801561019857600080fd5b506101b360048036038101906101ae9190610cd2565b61078d565b6040516101c09190610c54565b60405180910390f35b6000600354905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610d9c565b60405180910390fd5b600034905080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b89190610deb565b9250508190555080600360008282546102d19190610deb565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f29046116040518163ffffffff1660e01b8152600401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190610e7f565b73ffffffffffffffffffffffffffffffffffffffff1663474cf53d8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610ec1565b3060006040518563ffffffff1660e01b815260040161043393929190610f50565b6000604051808303818588803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b505050505080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610d9c565b60405180910390fd5b6000610509610556565b905061053781600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166108d3565b8091505090565b60026020528060005260406000206000915090505481565b60006105606101c9565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190610fc5565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106279190610ff2565b602060405180830381865afa158015610644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106689190611039565b6106729190611066565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff906110e6565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081590610d9c565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600360008282546108b99190611066565b925050819055506108ca81846108d3565b80915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190610fc5565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f29046116040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190610e7f565b846040518363ffffffff1660e01b8152600401610a2a929190611106565b6020604051808303816000875af1158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190611167565b610aac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa3906111e0565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f29046116040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190610e7f565b73ffffffffffffffffffffffffffffffffffffffff166380500d2060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190610ec1565b84846040518463ffffffff1660e01b8152600401610c0593929190611200565b600060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050505050565b6000819050919050565b610c4e81610c3b565b82525050565b6000602082019050610c696000830184610c45565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9f82610c74565b9050919050565b610caf81610c94565b8114610cba57600080fd5b50565b600081359050610ccc81610ca6565b92915050565b600060208284031215610ce857610ce7610c6f565b5b6000610cf684828501610cbd565b91505092915050565b60008060408385031215610d1657610d15610c6f565b5b6000610d2485828601610cbd565b9250506020610d3585828601610cbd565b9150509250929050565b600082825260208201905092915050565b7f6f6e6c79205969656c6447617465000000000000000000000000000000000000600082015250565b6000610d86600e83610d3f565b9150610d9182610d50565b602082019050919050565b60006020820190508181036000830152610db581610d79565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610c3b565b9150610e0183610c3b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3657610e35610dbc565b5b828201905092915050565b6000610e4c82610c94565b9050919050565b610e5c81610e41565b8114610e6757600080fd5b50565b600081519050610e7981610e53565b92915050565b600060208284031215610e9557610e94610c6f565b5b6000610ea384828501610e6a565b91505092915050565b600081519050610ebb81610ca6565b92915050565b600060208284031215610ed757610ed6610c6f565b5b6000610ee584828501610eac565b91505092915050565b610ef781610c94565b82525050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b6000610f3a610f35610f3084610efd565b610f15565b610f07565b9050919050565b610f4a81610f1f565b82525050565b6000606082019050610f656000830186610eee565b610f726020830185610eee565b610f7f6040830184610f41565b949350505050565b6000610f9282610c94565b9050919050565b610fa281610f87565b8114610fad57600080fd5b50565b600081519050610fbf81610f99565b92915050565b600060208284031215610fdb57610fda610c6f565b5b6000610fe984828501610fb0565b91505092915050565b60006020820190506110076000830184610eee565b92915050565b61101681610c3b565b811461102157600080fd5b50565b6000815190506110338161100d565b92915050565b60006020828403121561104f5761104e610c6f565b5b600061105d84828501611024565b91505092915050565b600061107182610c3b565b915061107c83610c3b565b92508282101561108f5761108e610dbc565b5b828203905092915050565b7f616c726561647920696e697469616c697a656400000000000000000000000000600082015250565b60006110d0601383610d3f565b91506110db8261109a565b602082019050919050565b600060208201905081810360008301526110ff816110c3565b9050919050565b600060408201905061111b6000830185610eee565b6111286020830184610c45565b9392505050565b60008115159050919050565b6111448161112f565b811461114f57600080fd5b50565b6000815190506111618161113b565b92915050565b60006020828403121561117d5761117c610c6f565b5b600061118b84828501611152565b91505092915050565b7f657468677720617070726f76616c206661696c65640000000000000000000000600082015250565b60006111ca601583610d3f565b91506111d582611194565b602082019050919050565b600060208201905081810360008301526111f9816111bd565b9050919050565b60006060820190506112156000830186610eee565b6112226020830185610c45565b61122f6040830184610eee565b94935050505056fea26469706673582212205a3cee47af08b864f06e8f5c2a5c690814d86de3d7e17c74cc4a7c8ead20100864736f6c634300080a0033";

export class BeneficiaryPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeneficiaryPool> {
    return super.deploy(overrides || {}) as Promise<BeneficiaryPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BeneficiaryPool {
    return super.attach(address) as BeneficiaryPool;
  }
  connect(signer: Signer): BeneficiaryPool__factory {
    return super.connect(signer) as BeneficiaryPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeneficiaryPoolInterface {
    return new utils.Interface(_abi) as BeneficiaryPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeneficiaryPool {
    return new Contract(address, _abi, signerOrProvider) as BeneficiaryPool;
  }
}
