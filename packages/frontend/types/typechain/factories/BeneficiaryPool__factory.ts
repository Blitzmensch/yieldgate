/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BeneficiaryPool,
  BeneficiaryPoolInterface,
} from "../BeneficiaryPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wethgw",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "supporter",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supporters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "supporter",
        type: "address",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d74806100206000396000f3fe6080604052600436106100705760003560e01c80634e71d92d1161004e5780634e71d92d146100e5578063647c75e2146100fc578063af38d75714610139578063f2888dbb1461016457610070565b806306552ff3146100755780630b76619b1461009e57806326476204146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610897565b61018d565b005b3480156100aa57600080fd5b506100b3610327565b6040516100c09190610917565b60405180910390f35b6100e360048036038101906100de9190610932565b610331565b005b3480156100f157600080fd5b506100fa610456565b005b34801561010857600080fd5b50610123600480360381019061011e9190610932565b610501565b6040516101309190610917565b60405180910390f35b34801561014557600080fd5b5061014e610519565b60405161015b9190610917565b60405180910390f35b34801561017057600080fd5b5061018b6004803603810190610186919061099d565b6105ce565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590610a27565b60405180910390fd5b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000600554905090565b34600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103809190610a76565b9250508190555034600560008282546103999190610a76565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663474cf53d3460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060006040518563ffffffff1660e01b815260040161042193929190610b2e565b6000604051808303818588803b15801561043a57600080fd5b505af115801561044e573d6000803e3d6000fd5b505050505050565b6000610460610519565b905061048e81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661067e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a826040516104f69190610917565b60405180910390a250565b60046020528060005260406000206000915090505481565b6000610523610327565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161057e9190610b65565b602060405180830381865afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610bac565b6105c99190610bd9565b905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600560008282546106699190610bd9565b9250508190555061067a818361067e565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016106fd929190610c0d565b6020604051808303816000875af115801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c6e565b61077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690610ce7565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380500d2060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040518463ffffffff1660e01b81526004016107fe93929190610d07565b600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086482610839565b9050919050565b61087481610859565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b600080600080608085870312156108b1576108b0610834565b5b60006108bf87828801610882565b94505060206108d087828801610882565b93505060406108e187828801610882565b92505060606108f287828801610882565b91505092959194509250565b6000819050919050565b610911816108fe565b82525050565b600060208201905061092c6000830184610908565b92915050565b60006020828403121561094857610947610834565b5b600061095684828501610882565b91505092915050565b600061096a82610839565b9050919050565b61097a8161095f565b811461098557600080fd5b50565b60008135905061099781610971565b92915050565b6000602082840312156109b3576109b2610834565b5b60006109c184828501610988565b91505092915050565b600082825260208201905092915050565b7f616c726561647920696e697469616c697a656400000000000000000000000000600082015250565b6000610a116013836109ca565b9150610a1c826109db565b602082019050919050565b60006020820190508181036000830152610a4081610a04565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a81826108fe565b9150610a8c836108fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac157610ac0610a47565b5b828201905092915050565b610ad581610859565b82525050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b6000610b18610b13610b0e84610adb565b610af3565b610ae5565b9050919050565b610b2881610afd565b82525050565b6000606082019050610b436000830186610acc565b610b506020830185610acc565b610b5d6040830184610b1f565b949350505050565b6000602082019050610b7a6000830184610acc565b92915050565b610b89816108fe565b8114610b9457600080fd5b50565b600081519050610ba681610b80565b92915050565b600060208284031215610bc257610bc1610834565b5b6000610bd084828501610b97565b91505092915050565b6000610be4826108fe565b9150610bef836108fe565b925082821015610c0257610c01610a47565b5b828203905092915050565b6000604082019050610c226000830185610acc565b610c2f6020830184610908565b9392505050565b60008115159050919050565b610c4b81610c36565b8114610c5657600080fd5b50565b600081519050610c6881610c42565b92915050565b600060208284031215610c8457610c83610834565b5b6000610c9284828501610c59565b91505092915050565b7f657468677720617070726f76616c206661696c65640000000000000000000000600082015250565b6000610cd16015836109ca565b9150610cdc82610c9b565b602082019050919050565b60006020820190508181036000830152610d0081610cc4565b9050919050565b6000606082019050610d1c6000830186610acc565b610d296020830185610908565b610d366040830184610acc565b94935050505056fea2646970667358221220a385174ef7fc3c5d2e6f6f86d95afdb8847b7b34da5a65d208fd9684e73c478e64736f6c634300080a0033";

export class BeneficiaryPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeneficiaryPool> {
    return super.deploy(overrides || {}) as Promise<BeneficiaryPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BeneficiaryPool {
    return super.attach(address) as BeneficiaryPool;
  }
  connect(signer: Signer): BeneficiaryPool__factory {
    return super.connect(signer) as BeneficiaryPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeneficiaryPoolInterface {
    return new utils.Interface(_abi) as BeneficiaryPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeneficiaryPool {
    return new Contract(address, _abi, signerOrProvider) as BeneficiaryPool;
  }
}
