/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BeneficiaryPool,
  BeneficiaryPoolInterface,
} from "../BeneficiaryPool";

const _abi = [
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wethgw",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "supporter",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supporters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "supporter",
        type: "address",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d57806100206000396000f3fe6080604052600436106100705760003560e01c80634e71d92d1161004e5780634e71d92d146100f9578063647c75e214610124578063af38d75714610161578063f2888dbb1461018c57610070565b806306552ff3146100755780630b76619b1461009e57806326476204146100c9575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061087a565b6101c9565b005b3480156100aa57600080fd5b506100b3610363565b6040516100c091906108fa565b60405180910390f35b6100e360048036038101906100de9190610915565b61036d565b6040516100f091906108fa565b60405180910390f35b34801561010557600080fd5b5061010e61049e565b60405161011b91906108fa565b60405180910390f35b34801561013057600080fd5b5061014b60048036038101906101469190610915565b6104de565b60405161015891906108fa565b60405180910390f35b34801561016d57600080fd5b506101766104f6565b60405161018391906108fa565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae9190610980565b6105ab565b6040516101c091906108fa565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025190610a0a565b60405180910390fd5b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000600554905090565b60008034905080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c29190610a59565b9250508190555080600560008282546103db9190610a59565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663474cf53d8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060006040518563ffffffff1660e01b815260040161046393929190610b11565b6000604051808303818588803b15801561047c57600080fd5b505af1158015610490573d6000803e3d6000fd5b505050505080915050919050565b6000806104a96104f6565b90506104d781600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610661565b8091505090565b60046020528060005260406000206000915090505481565b6000610500610363565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161055b9190610b48565b602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610b8f565b6105a69190610bbc565b905090565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600560008282546106479190610bbc565b925050819055506106588184610661565b80915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016106e0929190610bf0565b6020604051808303816000875af11580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190610c51565b610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990610cca565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380500d2060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684846040518463ffffffff1660e01b81526004016107e193929190610cea565b600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108478261081c565b9050919050565b6108578161083c565b811461086257600080fd5b50565b6000813590506108748161084e565b92915050565b6000806000806080858703121561089457610893610817565b5b60006108a287828801610865565b94505060206108b387828801610865565b93505060406108c487828801610865565b92505060606108d587828801610865565b91505092959194509250565b6000819050919050565b6108f4816108e1565b82525050565b600060208201905061090f60008301846108eb565b92915050565b60006020828403121561092b5761092a610817565b5b600061093984828501610865565b91505092915050565b600061094d8261081c565b9050919050565b61095d81610942565b811461096857600080fd5b50565b60008135905061097a81610954565b92915050565b60006020828403121561099657610995610817565b5b60006109a48482850161096b565b91505092915050565b600082825260208201905092915050565b7f616c726561647920696e697469616c697a656400000000000000000000000000600082015250565b60006109f46013836109ad565b91506109ff826109be565b602082019050919050565b60006020820190508181036000830152610a23816109e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a64826108e1565b9150610a6f836108e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aa457610aa3610a2a565b5b828201905092915050565b610ab88161083c565b82525050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b6000610afb610af6610af184610abe565b610ad6565b610ac8565b9050919050565b610b0b81610ae0565b82525050565b6000606082019050610b266000830186610aaf565b610b336020830185610aaf565b610b406040830184610b02565b949350505050565b6000602082019050610b5d6000830184610aaf565b92915050565b610b6c816108e1565b8114610b7757600080fd5b50565b600081519050610b8981610b63565b92915050565b600060208284031215610ba557610ba4610817565b5b6000610bb384828501610b7a565b91505092915050565b6000610bc7826108e1565b9150610bd2836108e1565b925082821015610be557610be4610a2a565b5b828203905092915050565b6000604082019050610c056000830185610aaf565b610c1260208301846108eb565b9392505050565b60008115159050919050565b610c2e81610c19565b8114610c3957600080fd5b50565b600081519050610c4b81610c25565b92915050565b600060208284031215610c6757610c66610817565b5b6000610c7584828501610c3c565b91505092915050565b7f657468677720617070726f76616c206661696c65640000000000000000000000600082015250565b6000610cb46015836109ad565b9150610cbf82610c7e565b602082019050919050565b60006020820190508181036000830152610ce381610ca7565b9050919050565b6000606082019050610cff6000830186610aaf565b610d0c60208301856108eb565b610d196040830184610aaf565b94935050505056fea26469706673582212200b5e11fc0d650fe3db2b460573f1809c42e8dd071c105caa07239abbe8b0ba4564736f6c634300080a0033";

export class BeneficiaryPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BeneficiaryPool> {
    return super.deploy(overrides || {}) as Promise<BeneficiaryPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BeneficiaryPool {
    return super.attach(address) as BeneficiaryPool;
  }
  connect(signer: Signer): BeneficiaryPool__factory {
    return super.connect(signer) as BeneficiaryPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeneficiaryPoolInterface {
    return new utils.Interface(_abi) as BeneficiaryPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeneficiaryPool {
    return new Contract(address, _abi, signerOrProvider) as BeneficiaryPool;
  }
}
